unit cCadCategoria;

interface

uses system.Classes, vcl.Controls,vcl.ExtCtrls,vcl.Dialogs, ZAbstractConnection, ZConnection, ZAbstractRODataset,
ZAbstractDataset, Zdataset, System.SysUtils; //lista de units

type
TCategoria = class   //declaracao do tipo da classe
  private
  ConexaoDB:TZConnection;
  F_categoriaId:Integer;
  F_descricao:string;
    function getCodigo: Integer;
    function getDescricao: string;
    procedure setCodigo(const Value: Integer);
    procedure setDescricao(const Value: string);

                //variaveis privadas somente dentro da classe
  public
  //variaveis publicas que pode ser usada fora da classe)
constructor Create(aConexao:TZCOnnection);
destructor Destroy; override;
function Gravar:Boolean;
function Atualizar:Boolean;
function Selecionar(id:Integer):Boolean;
function Apagar:Boolean;

published //variaveis publicas utilizadas para propriedades da classe para fornecer informacoes em runtime
  property codigo:Integer read getCodigo write setCodigo;
  property descricao:string read getDescricao write setDescricao;
end;


implementation

function TCategoria.Apagar: Boolean;
begin
  showmessage('apagado');
  Result:=True ;
end;

function TCategoria.Atualizar: Boolean;
begin
  showmessage('atualizado');
  Result:=True;
end;

constructor TCategoria.Create(aConexao:TZCOnnection);
begin
 ConexaoDB:=aConexao;
end;

destructor Tcategoria.Destroy;
begin
  showmessage ('excluido') ;
end;

function TCategoria.getCodigo: Integer;
begin
  Result := Self.F_categoriaId;
end;

function TCategoria.getDescricao: string;
begin
  Result:=Self.F_descricao;
end;

function TCategoria.Gravar: Boolean;
var qry:TZQuery;
begin
   try
     qry:=TZQuery.Create(nil);
     qry.Connection:=ConexaoDB;
     qry.SQL.Clear;
     qry.SQL.Add('INSERT INTO categorias (descricao) values (:descricao)');
     qry.ParamByName('descricao').AsString:=Self.F_descricao;
     try
       qry.ExecSQL;
     except
       Result:=false;
     end;
   finally
     if Assigned(qry) then
     freeandnil(qry);
   end;
end;

function TCategoria.Selecionar(id: Integer): Boolean;
var qry:tzquery;
begin
  try
    result:=true;
    qry:=TzQuery.Create(nil);
    qry.connection:=ConexaoDB;
    qry.SQL.Clear;
    qry.SQL.Add('SELECT categoriaId, '+ '           descricao' + '  FROM categoria' + '   WHERE categoriaId=:categoriaId');
    qry.ParamByName('categoriaId').AsInteger:=id;
    try
      qry.Open;

      self.F_categoriaId:= qry.FieldByName('categoriaId').AsInteger;
      Self.F_descricao := qry.FieldByName('descricao').AsString;
    except
    result:=false;
    end;
  finally
  if assigned(qry) then
  freeandnil(qry);
  end;

end;

procedure TCategoria.setCodigo(const Value: Integer);
begin
  Self.F_categoriaId:=Value;
end;

procedure TCategoria.setDescricao(const Value: string);
begin
  Self.F_descricao :=Value;
end;

end.
